const { Client } = require('pg'); //To communicate with the PostGreSQL Database
require('dotenv').config(); //To load environment variables from the .env file

module.exports.runQueryWithParams = (queryWithParams) => {
    return new Promise((resolve, reject) => {
        const client = new Client({
            connectionString: process.env.DATABASE_URL,
            ssl: true,
        });

        client.connect();

        client.query(queryWithParams.query, queryWithParams.params, (err, res) => {
            if (err) {
                console.log(err);
                reject(err);
            }
            resolve(res);
            client.end();
        });
    });
}

module.exports.runSimpleQuery = (query) => {
    return new Promise((resolve, reject) => {
        const client = new Client({
            connectionString: process.env.DATABASE_URL,
            ssl: true,
        });

        client.connect();

        client.query(query, [], (err, res) => {
            if (err) {
                console.log(err);
                reject(err);
            }
            resolve(res);
            client.end();
        });
    });
}

/*
CREATE TABLE USERS (
    ID INT GENERATED BY DEFAULT AS IDENTITY,
    EMAIL VARCHAR(100) NOT NULL UNIQUE,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    PASSWORD VARCHAR(200) NOT NULL,
    REGISTRATION_STATUS VARCHAR(10) NOT NULL,
    REGISTRATION_KEY VARCHAR(100) NOT NULL,
    REGISTRATION_START_DATE DATE NOT NULL,
    REGISTRATION_COMPLETE_DATE DATE,
    PRIMARY KEY(ID)
  );
*/

/*
CREATE TABLE NOTES (
    ID INT GENERATED BY DEFAULT AS IDENTITY,
    USERID INT NOT NULL,
    TITLE VARCHAR(100) NOT NULL,
    NOTE VARCHAR(10485760), //MAX
    TAGS VARCHAR(10485760),
    ARCHIVED BOOLEAN NOT NULL,
    CREATED_DATE DATE NOT NULL,
    MODIFIED_DATE DATE NOT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(ID)
  );
*/